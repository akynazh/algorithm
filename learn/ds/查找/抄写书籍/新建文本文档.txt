复制书籍
时间限制 ：2000毫秒 内存限制 ：65536 KB

在发明印刷书籍之前，很难复制一本书。 所有的内容都必须由所谓的抄写员手工重写。 抄写员得到了一本书，几个月后他完成了抄写。 15世纪最著名的抄写员之一，他的名字叫Xaverius Endricus Remius Ontius Xendrianus（Xerox）。 无论如何，这项工作非常烦人和无聊。 加快速度的唯一方法是雇用更多的抄写员。

曾几何时，有一家剧院剧团想演奏著名的古董悲剧。 这些戏剧的剧本被分成许多书，而且演员们当然需要更多的副本。 因此，他们雇用了许多抄写员来制作这些书的副本。 假设您有m本书（编号为1、2 ... m），其页数可能有所不同（p1，p2 ... pm），并且您想为每本书制作一份副本。 您的任务是将这些书籍划分为k个抄写员，k <= m。 每本书只能分配给一个书写者，并且每个书写者必须获得连续的书籍序列。 这就是说，数字0 = b0 <b1 <b2，... <bk-1 <= bk = m的序列不断增加，因此第i个书写者获得了一系列介于bi-1 + 1和bi-1之间的书。双。 复印所有书籍所需的时间由分配最多的书记员确定。 因此，我们的目标是最大程度地减少分配给单个划线员的最大页面数。 您的任务是找到最佳分配。


输入

输入包含N个案例。 输入的第一行仅包含正整数N。然后遵循这些情况。 每个案例恰好由两行组成。 在第一行，有两个整数m和k，1 <= k <= m <=500。在第二行，有整数p1，p2，... pm，中间用空格隔开。 所有这些值均为正且小于10000000。


输出

对于每种情况，仅打印一行。 该行必须包含正好划分为k个部分的输入顺序p1，p2，... pm，以便单个部分的最大和应尽可能小。 使用斜杠字符（'/'）分隔各个部分。 在任何两个连续的数字之间以及数字和斜杠之间必须恰好有一个空格字符。

如果有多个解决方案，请打印一种解决方案，以最大程度地减少分配给第一位划线员，然后分配给第二位划线员的工作，等等。但是必须为每位划线员至少分配一本书。


样本输入

2
9 3
100 200 300 400 500 600 700 800 900
5 4
100 100 100 100 100


样本输出

100 200 300 400 500 / 600 700 / 800 900
100 / 100 / 100 / 100 100 