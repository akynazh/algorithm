> Problem: [LCR 099. 最小路径和](https://leetcode.cn/problems/0i0mDW/description/)

[TOC]

# 思路

> 使用动态规划，dp[i][j]表示：从起点到i，j这个点的最小路劲和，转移方程为:dp[i][j]=min(dp[i][j-1],dp[i-1][j])+grid[i][j],表示这个点（i，j），要么从上面来，要么从左边来，取最小值即可

# Code

* []

```Python

class Solution(object):
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        m = len(grid)
        n = len(grid[0])

        dp = [[0]*(n) for _ in range(m)]
        dp[0][0] = grid[0][0]
        for i in range(1,n):
            dp[0][i]= dp[0][i-1]+grid[0][i]
        for j in range(1,m):
            dp[j][0] = dp[j-1][0]+grid[j][0]
        
        for i in range(1,m):
            for j in range(1,n):
                dp[i][j] = min(dp[i-1][j],dp[i][j-1])+grid[i][j]
        return dp[m-1][n-1]
```

